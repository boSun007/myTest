<?php

$email ="nick_cai@163.com";

$pattern = '/^[a-zA-Z][0-9a-zA-Z_]{4,19}@[0-9a-zA-Z_]{1,10}(\.)(com|cn|com.cn|net)$/';
/**
 * ^ : 开头
 * $ : 结尾
 * ^[a-zA-Z] : 以a-zA-Z开头
 * [0-9a-zA-Z_]{4,19} : 后接由 0-9或a-z或A-Z或_ 组成的4-19个字符
 * @ ： 后接@字符
 * [0-9a-zA-Z_]{1,10} : 同上
 * (\.) : 后接.
 * (com|cn|com.cn|net): com或cn或com.cn或net
 * 
 * * : 表示出现0次或1次或多次 相当于{0,},
 * + : 表示出现1次或多次 相当于{1,},
 * ? : 表示出现0次或1次 相当于{0,1}
 * 
 * 例子：
 * ab* : 和ab{0,}同义,匹配以a开头,后面可以接0个或者N个b组成的字符串("a", "ab", "abbb", 等);
 * ab+ : 和ab{1,}同义,同上条一样，但最少要有一个b存在 ("ab", "abbb", 等.);
 * ab? : 和ab{0,1}同义,可以没有或者只有一个b;
 * a?b+$ : 匹配以一个或者0个a再加上一个以上的b结尾的字符串.
 * a(bc){1,5} : 一个到5个 "bc"
 * 
 * . : 一个点('.')可以代表所有的单一字符,不包括"\n"
 *     如果,要匹配包括"\n"在内的所有单个字符,怎么办? 用'[\n.]'这种模式.
 * ".{3}$" :  三个任意字符结尾
 * 
 * [] : 中括号括住的内容只匹配一个单一的字符
 * [ab] : 匹配单个的 a 或者 b ( 和 "a│b" 一样);
 * [a-d] : 匹配'a' 到'd'的单个字符 (和"a│b│c│d" 还有 "[abcd]"效果一样); 
 *         一般我们都用[a-zA-Z]来指定字符为一个大小写英文
 * 
 * ^ : 你也可以把你不想要得字符列在中括号里，
 * 你只需要在总括号里面使用'^' 作为开头 "%[^a-zA-Z]%" 匹配含有两个百分号里面有一个非字母的字符串.
 * 
 * \b : 书上说他是用来匹配一个单词边界,就是...比如've\b',可以匹配love里的ve而不匹配very里有ve
 * \B : 正好和上面的\b相反.例子我就不举了
 */



$result = preg_match($pattern,$email);


var_dump($result);
